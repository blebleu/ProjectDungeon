<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start();
pitch = 0;
direction = 0;
z = 0;

xspeed = 0;
yspeed = 0;
zspeed = 0;
move_speed = 4;

items = 0;
item_1_missing = true;
item_2_missing = true;
item_3_missing = true;

window_set_cursor(cr_none);

//Overlay Shit
overlayTimer=0;
overlayLimit=2*room_speed;
overlayDirection=true; //true=increasing,false=decreasing
overlayOn=false;
overlayAlphaMax=0.5;
overlayAlphaMin=0.1;
overlayAlpha=overlayAlphaMin;
//jumpscare
jumpscare=false;
jumpscareDur=room_speed/2;
jumpscareTime=0;
jumpscareTimer=0;
jumpscareLimit=5*room_speed;
jumpscareProximity=200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Movement

direction-= (display_mouse_get_x() - display_get_width()/2)/10; //Left and Right for camera

pitch = clamp(pitch + (display_mouse_get_y() - display_get_height()/2)/10, -80, 80); //Up and down for camera

display_mouse_set(display_get_width()/2, display_get_height()/2);

// Handle Movement  
xspeed = 0;
yspeed = 0; 
var d = degtorad(direction);      
if(keyboard_check(ord('A'))){
        xspeed-= sin(d) * move_speed;
        yspeed-= cos(d) * move_speed;

}
if(keyboard_check(ord('S'))){
        xspeed-= cos(d) * move_speed;
        yspeed+= sin(d) * move_speed;

}
if(keyboard_check(ord('D'))){
        xspeed+= sin(d) * move_speed;
        yspeed+= cos(d) * move_speed;

}
if(keyboard_check(ord('W'))){
        xspeed+= cos(d) * move_speed; 
        yspeed-= sin(d) * move_speed;

}




//Wall Collision
if (!place_meeting(x + xspeed,  y, obj_block)){
        x += xspeed; //Move X
}
else{
        xspeed = 0; 
}

if (!place_meeting(x,  y + yspeed, obj_block)){
        y += yspeed; //Move X
}
else{
        yspeed = 0; 
}
//Keep Player In Room
x=clamp(x,70,room_width-sprite_width);
y=clamp(y,70,room_height-sprite_height);




// Collect Items

with(instance_place(x,y, obj_collectable))
    {
    instance_destroy();

    }
if(keyboard_check(vk_shift) &amp;&amp; keyboard_check(ord("L"))){
    items++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*d3d_start();
pitch = 0;
direction = 0;
z = 0;

xspeed = 0;
yspeed = 0;
zspeed = 0;
move_speed = 4;

items = 0;
item_1_missing = true;
item_2_missing = true;
item_3_missing = true;

window_set_cursor(cr_none);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inv Management
if (items &gt;= 1){
item_1_missing = false;
}
if (items &gt;= 2){
item_2_missing = false;
}
if (items &gt;= 3){
global.randomness++;
room_restart();
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Overlay step
if(instance_exists(obj_ghostie)){
    var enemyDist = point_distance(x,y,obj_ghostie.x,obj_ghostie.y);
    if(enemyDist&lt;1000){
        overlayOn=true;
        if(overlayAlpha&gt;overlayAlphaMax) overlayDirection=false;
        else if(overlayAlpha&lt;overlayAlphaMin) overlayDirection=true;
        if(overlayDirection) overlayAlpha+=0.005;
        else overlayAlpha-=0.005;
    }
    else{
        overlayOn=false;
        overlayAlpha=overlayAlphaMin;
    }
    show_debug_message(overlayOn);
}
/*if(overlayDirection=true) overlayTimer++;
else overlayTimer--;



if(enemyDist&lt;250){
    overlayOn=true;
    overlayAlphaMax=1;
    overlayAlphaMin=0.5;
    overlayLimit=room_speed/2;
}
else if(enemyDist&lt;400){
    overlayOn=true;
    overlayAlphaMax=0.8;
    overlayAlphaMin=0.3;
    overlayLimit=room_speed;
}
else if(enemyDist&lt;700){
    overlayOn=true;
    overlayAlphaMax=0.65;
    overlayAlphaMin=0.2;
    overlayLimit=room_speed*1.5;
}
else if(enemyDist&lt;1000){
    overlayOn=true;
    overlayAlphaMax=0.5;
    overlayAlphaMin=0.1;
    overlayLimit=room_speed*2;
}
else{
    overlayOn=false;
    overlayTimer=0;
    overlayAlphaMax=0;
    overlayAlphaMin=0;
}
overlayAlpha=(overlayTimer/overlayLimit)*overlayAlphaMax;
if(overlayAlpha&lt;overlayAlphaMin) overlayAlpha=overlayAlphaMin;

if(overlayTimer&lt;=0) {
    overlayTimer=0;
    overlayDirection=true;
}
else if (overlayTimer&gt;=overlayLimit){
    overlayTimer=overlayLimit;
    overlayDirection=false;
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jumpscare
if(jumpscare){
    jumpscareTime--;
    if(jumpscareTime&lt;=0) jumpscare=false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_yellow);
draw_ellipse(0,0, 20,20, item_1_missing);
draw_ellipse(30,0, 50,20, item_2_missing);
draw_ellipse(60,0, 80,20, item_3_missing);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Overlay GUI
if(overlayOn){
    draw_set_alpha(overlayAlpha);
    draw_sprite(spr_overlay,0,0,0);
    draw_set_alpha(1);
}
else draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jumpscare
if(jumpscare){
    draw_set_alpha((jumpscareTime/jumpscareDur)+0.25);
    draw_sprite(spr_jumpscare1,0,0,0);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
d3d_set_fog(true, c_black, 0, 500); //CAN MAKE A FOG IF NEEDED
d3d_set_projection(x, y, z + 64 , x +cos(degtorad(direction)), y - sin(degtorad(direction)), z-sin(degtorad(pitch))+64,0,0,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
